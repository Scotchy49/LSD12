;OP_PROGRAM []
;|  OP_ID (x) []
;|  next
;|  OP_FUNCTION [ -> main():v(-1,0)]
;|  |  OP_ID (main) [ -> main():v(-1,0)]
;|  |  next
;|  |  OP_FUNCTION_PARAMS [ -> main():v(-1,0)]
;|  |  next
;|  |  OP_FUNCTION_TYPE (v) [ -> main():v(-1,0)]
;|  |  next
;|  |  OP_FUNCTION_DECLBLOCK [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  OP_FUNCTION_VAR_DECL [ -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  OP_ID (b) [ -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  next
;|  |  |  |  OP_VAR_TYPE (b) [ -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  next
;|  |  |  OP_FUNCTION [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  OP_ID (a) [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  next
;|  |  |  |  OP_FUNCTION_PARAMS [ -> +b:b(1,1) -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  OP_FUNCTION_PARAM [ -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  |  OP_FUNCTION_PARAM_VAR (0) [ -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  |  next
;|  |  |  |  |  |  OP_ID (a) [ -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  |  next
;|  |  |  |  |  |  OP_VAR_TYPE (i) [ -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  next
;|  |  |  |  |  OP_FUNCTION_PARAM [ -> +b:b(1,1) -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  |  OP_FUNCTION_PARAM_VAR (1) [ -> +b:b(1,1) -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  |  next
;|  |  |  |  |  |  OP_ID (b) [ -> +b:b(1,1) -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  |  next
;|  |  |  |  |  |  OP_VAR_TYPE (b) [ -> +b:b(1,1) -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  next
;|  |  |  |  OP_FUNCTION_TYPE (v) [ -> +b:b(1,1) -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  next
;|  |  |  |  OP_FUNCTION_DECLBLOCK [ -> +b:b(1,1) -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  next
;|  |  |  |  OP_FUNCTION_BODY [ -> +b:b(1,1) -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  OP_INSTRUCTION_LIST [ -> +b:b(1,1) -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  |  OP_FUNCTION_CALL [ -> +b:b(1,1) -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  |  |  OP_ID (a) [ -> +b:b(1,1) -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  |  |  next
;|  |  |  |  |  |  |  OP_FUNCTION_CALL_PARAMS [ -> +b:b(1,1) -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  |  |  |  OP_CONSTANT_INT (2) [ -> +b:b(1,1) -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  |  |  |  next
;|  |  |  |  |  |  |  |  OP_LEXPR (b) [ -> +b:b(1,1) -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  next
;|  |  OP_FUNCTION_BODY [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  OP_INSTRUCTION_LIST [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  OP_ASSIGN [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  OP_LEXPR (b) [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  next
;|  |  |  |  |  OP_CONSTANT_BOOL (1) [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  next
;|  |  |  |  OP_FUNCTION_CALL [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  OP_ID (a) [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  next
;|  |  |  |  |  OP_FUNCTION_CALL_PARAMS [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  |  OP_CONSTANT_INT (1) [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;|  |  |  |  |  |  next
;|  |  |  |  |  |  OP_LEXPR (b) [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;Generating pcode for node OP_PROGRAM []
ssp 1
ujp @begin
;Generating pcode for node OP_FUNCTION_DECLBLOCK [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;Generating pcode for node OP_FUNCTION [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
define @a_1
ssp 7
ujp @a_1Body
;Generating pcode for node OP_FUNCTION_DECLBLOCK [ -> +b:b(1,1) -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
define @a_1Body
;Generating pcode for node OP_INSTRUCTION_LIST [ -> +b:b(1,1) -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;Generating pcode for node OP_FUNCTION_CALL [ -> +b:b(1,1) -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
mst 0
;Generating pcode for node OP_CONSTANT_INT (2) [ -> +b:b(1,1) -> +a:i(1,0) -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
ldc i 2
lod a 0 6
cup 2 @a_1
retp
define @begin
;Generating pcode for node OP_INSTRUCTION_LIST [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
;Generating pcode for node OP_ASSIGN [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
lda b 0 0
;Generating pcode for node OP_CONSTANT_BOOL (1) [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
ldc b 1
sto b
;Generating pcode for node OP_FUNCTION_CALL [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
mst 0
;Generating pcode for node OP_CONSTANT_INT (1) [ -> a(i,&b):v(0,1) -> b:b(0,0) -> main():v(-1,0)]
ldc i 1
lda b 0 0
cup 2 @a_1
stp
